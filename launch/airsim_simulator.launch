<launch>
  <!-- Voxblox arguments -->
  <arg name="voxel_size" default="0.10"/>
  <arg name="voxels_per_side" default="16"/>
  <arg name="ray_length" default="5.0"/>
  <arg name="method" default="merged"/>
  <arg name="verbose_voxblox" default="false"/>
  
  <!-- Odometry  arguments (random_walk, ground_truth) -->
  <arg name="odom_noise_model" default="ground_truth"/>
  
  <!--  Experiment arguments -->  
  <arg name="experiment_config" default="CityBuilding.yaml"/>
  
  
  
  <!-- *** Run the Simulation *** -->

  <!-- static camera transform -->
  <node pkg="tf" type="static_transform_publisher" name="tf_camera_to_link" args="0 0 0 -0.5 0.5 -0.5 0.5 /camera_link /airsim_camera 100"/>  
  <node pkg="tf" type="static_transform_publisher" name="tf_odom_to_world" args="0 0 0 0 0 0 1 /world /odom 100"/>  
  <node pkg="tf" type="static_transform_publisher" name="tf_mission_to_world" args="0 0 0 0 0 0 1 /mission /world 100"/>  

  <!-- airsim client -->
  <node name="airsim_simulator" pkg="unreal_airsim" type="airsim_simulator_node" required="true" output="screen" args="-alsologtostderr">
     <rosparam file="$(find unreal_airsim)/cfg/airsim_simulation.yaml"/>
  </node>

<!--     Voxblox -->
<!--  <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr">-->
<!--    <remap from="pointcloud" to="/unreal/online_perception/pointcloud"/>-->
<!--    <param name="use_tf_transforms" value="true"/>-->
<!--    <param name="publish_tsdf_map" value="false" />-->
<!--    <param name="publish_esdf_map" value="false" />-->
<!--    <param name="tsdf_voxel_size" value="0.30" />-->
<!--    <param name="tsdf_voxels_per_side" value="16" />-->
<!--    <param name="color_mode" value="color" />-->
<!--    <param name="update_mesh_every_n_sec" value="1.0" />-->
<!--    <param name="method" value="$(arg method)" />-->
<!--    <param name="max_ray_length_m" value="25" />-->
<!--    <param name="allow_clear" value="true" />-->
<!--    <param name="verbose" value="$(arg verbose_voxblox)" />-->
<!--    <param name="publish_map_incremental" value="true" />-->
<!--  </node>-->
  
<!--   <node name="voxgraph_mapper" pkg="voxgraph" type="voxgraph_mapping_node" output="screen">-->
<!--    <rosparam file="$(find unreal_airsim)/cfg/voxgraph_mapper.yaml"/>-->
<!--    <remap from="velodyne_points" to="/unreal/online_perception/pointcloud"/>-->
<!--  </node>-->

  <!-- RVIZ Visualization -->
  <node type="rviz" name="rviz_voxblox" pkg="rviz" args="-d $(find unreal_airsim)/cfg/test_airsim.rviz"/>
  
</launch>
